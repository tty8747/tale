version: 2
jobs:
  build:
    working_directory: ~/tale

    docker: 
      - image: circleci/openjdk:9-jdk-browsers 
      - image: ansible/ansible:ubuntu1604

    steps: 

      - checkout

      - run:
          name: ansible test
          command: ansible -m ping all -i .ci/ansible/inventory/prod

      - restore_cache: 
          key: tale-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline
      
      - save_cache:
          paths:
            - ~/.m2
          key: tale-{{ checksum "pom.xml" }}
      
      - run: mvn package

      - store_artifacts:
          path: ~/tale/
      
      - store_test_results:
          path: target/surefire-reports

      - run:
          name: tar-x
          command: mkdir -p ~/tale-dist && tar -C ~/tale-dist -zxvf ~/tale/target/dist/tale.tar.gz

      - run:
          name: build deb package
          command: ~/tale/.ci/build_deb.sh $CIRCLE_BUILD_NUM ~/tale-dist

      - add_ssh_keys:
          fingerprints:
            - "cb:15:bf:69:2b:32:b7:b4:2d:dd:40:90:40:66:e9:91"

      - run:
          name: delivery deb package
          command: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null tale.deb  deploy@test.aaaj.ru:~

      - run:
          name: install deb package
          command: ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null deploy@test.aaaj.ru "sudo dpkg -i tale.deb && sudo apt-get install -f"
      - run:
          name: ansible test
          command: ansible -m ping all -i .ci/ansible/inventory/prod
